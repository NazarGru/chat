{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\NewChat\\\\NewChat.js\";\nimport React from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\nimport styles from './Style';\n\nconst firebase = require(\"firebase\");\n\nclass NewChat extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'username':\n          break;\n\n        case 'message':\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      username: null,\n      message: null\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"main\", {\n      className: classes.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\u0412\\u0456\\u0434\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0438 \\u041F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\"), React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: e => this.submitNewChat(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"new-chat-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0435\\u043C\\u0430\\u0456\\u043B \\u0441\\u0432\\u043E\\u0433\\u043E \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"), React.createElement(Input, {\n      require: true,\n      className: classes.input,\n      autoFocus: true,\n      onChange: e => this.userTyping('username', e),\n      id: \"new-chat-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"new-chat-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0454 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\"), React.createElement(Input, {\n      require: true,\n      className: classes.input,\n      autoFocus: true,\n      onChange: e => this.userTyping('message', e),\n      id: \"new-chat-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(NewChat);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/NewChat/NewChat.js"],"names":["React","FormControl","InputLabel","Input","Button","Paper","withStyles","CssBaseline","Typography","styles","firebase","require","NewChat","Component","constructor","userTyping","type","e","state","username","message","render","classes","props","main","paper","form","submitNewChat","input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,KAAjD,EAAwDC,UAAxD,EAAoEC,WAApE,EAAiFC,UAAjF,QAAmG,mBAAnG;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA8CdC,UA9Cc,GA8CF,CAACC,IAAD,EAAOC,CAAP,KAAY;AACpB,cAAOD,IAAP;AACI,aAAK,UAAL;AAEA;;AAEA,aAAK,SAAL;AAEA;;AAEA;AACI;AAVR;AAYH,KA3Da;;AAEZ,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAEA,WACI;AAAM,MAAA,SAAS,EAAED,OAAO,CAACE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,OAAO,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+IADJ,EAII;AAAM,MAAA,SAAS,EAAEH,OAAO,CAACI,IAAzB;AAA+B,MAAA,QAAQ,EAAGT,CAAD,IAAO,KAAKU,aAAL,CAAmBV,CAAnB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qLADJ,EAII,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,SAAS,EAAEK,OAAO,CAACM,KAAlC;AACA,MAAA,SAAS,MADT;AAEA,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKF,UAAL,CAAgB,UAAhB,EAA4BE,CAA5B,CAFjB;AAGA,MAAA,EAAE,EAAC,mBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,EAWI,oBAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4JADJ,EAII,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,SAAS,EAAEK,OAAO,CAACM,KAAlC;AACA,MAAA,SAAS,MADT;AAEA,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKF,UAAL,CAAgB,SAAhB,EAA2BE,CAA3B,CAFjB;AAGA,MAAA,EAAE,EAAC,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAXJ,CAJJ,CAFJ,CADJ;AAiCD;;AA/CmC;;AAgEtC,eAAeX,UAAU,CAACG,MAAD,CAAV,CAAmBG,OAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\r\nimport styles from './Style';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass NewChat extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n        <main className={classes.main}>\r\n            <CssBaseline></CssBaseline>\r\n            <Paper className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Відправити Повідомлення\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"new-chat-username\">\r\n                        Введіть емаіл свого користувача\r\n                        </InputLabel>\r\n                        <Input require className={classes.input}\r\n                        autoFocus\r\n                        onChange={(e) => this.userTyping('username', e)}\r\n                        id=\"new-chat-username\">                     \r\n                        </Input>\r\n                    </FormControl>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor=\"new-chat-message\">\r\n                        Напишіть своє повідомлення\r\n                        </InputLabel>\r\n                        <Input require className={classes.input}\r\n                        autoFocus\r\n                        onChange={(e) => this.userTyping('message', e)}\r\n                        id=\"new-chat-message\">                     \r\n                        </Input>\r\n                    </FormControl>\r\n                </form>\r\n\r\n            </Paper>\r\n        </main>\r\n    )\r\n  }\r\n  userTyping =(type, e) =>{\r\n      switch(type){\r\n          case 'username':\r\n\r\n          break;\r\n\r\n          case 'message':\r\n\r\n          break;\r\n\r\n          default:\r\n              break\r\n      }\r\n  }\r\n\r\n}\r\nexport default withStyles(styles)(NewChat);"]},"metadata":{},"sourceType":"module"}