{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Singup\\\\Singup.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './Style';\n\nconst firebase = require(\"firebase\");\n\nclass Singup extends React.Component {\n  constructor() {\n    super();\n\n    this.formIsValidation = () => this.state.password === this.state.passwordConfirmation;\n\n    this.userTyping = (whichInput, event) => {\n      switch (whichInput) {\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: event.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitSignup = e => {\n      e.preventDefault();\n\n      if (!this.formIsValidation()) {\n        this.setState({\n          signupError: 'паролі не співпадають'\n        });\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(authRes => {\n        const userObj = {\n          email: authRes.user.email\n        };\n        firebase.firestore().collection;\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"main\", {\n      className: classes.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044C\"), React.createElement(\"form\", {\n      onSubmit: e => this.submitSignup(e),\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      require: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 email\"), React.createElement(Input, {\n      onChange: e => this.userTyping('email', e),\n      autoComplete: \"email\",\n      autoFocus: true,\n      id: \"signup-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      require: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('password', e),\n      id: \"signup-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      require: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-password=confirmation-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('passwordConfirmation', e),\n      id: \"signup-password=confirmation-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      className: classes.submit,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044C\")), this.state.signupError ? React.createElement(Typography, {\n      className: classes.signupError,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.signupError) : null, React.createElement(Typography, {\n      className: classes.hasAccountHeader,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u0412\\u0438 \\u0432\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\"), React.createElement(Link, {\n      to: \"/login\",\n      className: classes.logInLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\")));\n  }\n\n}\n\nexport default withStyles(styles)(Singup);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Singup/Singup.js"],"names":["Link","React","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","firebase","require","Singup","Component","constructor","formIsValidation","state","password","passwordConfirmation","userTyping","whichInput","event","setState","email","target","value","submitSignup","e","preventDefault","signupError","auth","createUserWithEmailAndPassword","then","authRes","userObj","user","firestore","collection","render","classes","props","main","paper","form","submit","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './Style';\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\nclass Singup extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            email: null,\r\n            password: null,\r\n            passwordConfirmation: null,\r\n            signupError: ''\r\n        }\r\n    }\r\n\r\nrender(){\r\n    const { classes } = this.props;\r\n\r\nreturn(\r\n    <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n            <Typography component='h1' variant='h5'>\r\n                Зареєструватись\r\n            </Typography>\r\n            <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-email-input'>\r\n                        Введіть свій email\r\n                    </InputLabel>\r\n                    <Input onChange={(e) => this.userTyping('email', e)} autoComplete='email'autoFocus id='signup-email-input' ></Input>\r\n                </FormControl>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-password-input'>\r\n                        Придумайте пароль\r\n                    </InputLabel>\r\n                    <Input type='password' onChange={(e) => this.userTyping('password', e)}  id='signup-password-input' ></Input>\r\n                </FormControl>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-password=confirmation-input'>\r\n                        Повторіть пароль \r\n                    </InputLabel>\r\n                    <Input type='password' onChange={(e) => this.userTyping('passwordConfirmation', e)}  id='signup-password=confirmation-input' ></Input>\r\n                </FormControl>\r\n                <Button type='submit' className={classes.submit} fullWidth variant='contained' color='primary'>Зареєструватись</Button>\r\n            </form>\r\n            {\r\n                this.state.signupError ?\r\n                <Typography className={classes.signupError}component='h5' variant='h6'>\r\n                    {this.state.signupError}\r\n                </Typography> :\r\n                null\r\n            }\r\n            <Typography className={classes.hasAccountHeader} component='h5' variant='h6'>Ви вже маєте акаунт</Typography>\r\n            <Link to='/login' className={classes.logInLink}>Увійти</Link>\r\n\r\n        </Paper>\r\n\r\n    </main>\r\n)\r\n}\r\nformIsValidation = () => this.state.password === this.state.passwordConfirmation;\r\n\r\nuserTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\nsubmitSignup = (e) => {\r\n    e.preventDefault();\r\n    if (!this.formIsValidation()){\r\n        this.setState({signupError: 'паролі не співпадають'});\r\n   return; \r\n}\r\n   firebase\r\n   .auth() \r\n   .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n   .then(authRes =>{\r\n       const userObj = {\r\n           email: authRes.user.email\r\n       };\r\n       firebase\r\n       .firestore()\r\n       .collection\r\n   })  \r\n}\r\n}\r\nexport default withStyles(styles)(Singup);"]},"metadata":{},"sourceType":"module"}