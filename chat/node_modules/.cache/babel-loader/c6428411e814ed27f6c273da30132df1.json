{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import Avatar from'@material-ui/core/Avatar';import Typography from'@material-ui/core/Typography';import styles from'./Style';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import ListItemIcon from'@material-ui/core/ListItemIcon';import NotificationImportant from'@material-ui/icons/NotificationImportant';var ChatListComponent=/*#__PURE__*/function(_React$Component){_inherits(ChatListComponent,_React$Component);function ChatListComponent(){var _getPrototypeOf2;var _this;_classCallCheck(this,ChatListComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ChatListComponent)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.userIsSender=function(chat){return chat.messages[chat.messages.length-1].sender===_this.props.userEmail;};_this.newChat=function(){return _this.props.newChatBtnFn();};_this.selectChat=function(index){return _this.props.selectChatFn(index);};return _this;}_createClass(ChatListComponent,[{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;if(this.props.chats.length>0){return React.createElement(\"div\",{className:classes.root},React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",onClick:this.newChat,className:classes.newChatBtn},\"\\u0417\\u043D\\u0430\\u0439\\u0442\\u0438 \\u041A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"),React.createElement(List,null,this.props.chats.map(function(_chat,_index){return React.createElement(\"div\",{key:_index},React.createElement(ListItem,{onClick:function onClick(){return _this2.selectChat(_index);},className:classes.listItem,selected:_this2.props.selectedChatIndex===_index,alignItems:\"flex-start\"},React.createElement(ListItemAvatar,null,React.createElement(Avatar,{alt:\"Remy Sharp\"},_chat.users.filter(function(_user){return _user!==_this2.props.userEmail;})[0].split('')[0])),React.createElement(ListItemText,{primary:_chat.users.filter(function(_user){return _user!==_this2.props.userEmail;})[0],secondary:React.createElement(React.Fragment,null,React.createElement(Typography,{component:\"span\",color:\"textPrimary\"},_chat.messages[_chat.messages.length-1].message.substring(0,30)+' ...'))}),_chat.receiverHasRead===false&&!_this2.userIsSender(_chat)?React.createElement(ListItemIcon,null,React.createElement(NotificationImportant,{className:classes.unreadMessage})):null),React.createElement(Divider,null));})));}else{return React.createElement(\"div\",{className:classes.root},React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",onClick:this.newChat,className:classes.newChatBtn},\"\\u0417\\u043D\\u0430\\u0439\\u0442\\u0438 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"),React.createElement(List,null));}}}]);return ChatListComponent;}(React.Component);export default withStyles(styles)(ChatListComponent);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/Нова папка (2)/src/ChatList/ChatList.js"],"names":["React","withStyles","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","styles","Divider","Button","ListItemIcon","NotificationImportant","ChatListComponent","userIsSender","chat","messages","length","sender","props","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","classes","chats","root","newChatBtn","map","_chat","_index","listItem","selectedChatIndex","users","filter","_user","split","message","substring","receiverHasRead","unreadMessage","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Style';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatListComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.props.chats.length > 0) {\r\n      return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" \r\n              fullWidth \r\n              color='primary' \r\n              onClick={this.newChat} \r\n              className={classes.newChatBtn}>\r\n                Знайти Користувача\r\n            </Button>\r\n            <List>\r\n              {\r\n                this.props.chats.map((_chat, _index) => {\r\n                  return (\r\n                    <div key={_index}>\r\n                      <ListItem onClick={() => this.selectChat(_index)} \r\n                        className={classes.listItem} \r\n                        selected={this.props.selectedChatIndex === _index} \r\n                        alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                          <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                          primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\r\n                          secondary={\r\n                            <React.Fragment>\r\n                              <Typography component='span'\r\n                                color='textPrimary'>\r\n                                  {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          }/>\r\n                          {\r\n                            _chat.receiverHasRead === false && !this.userIsSender(_chat) ? \r\n                            <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                            null\r\n                          }\r\n                      </ListItem>\r\n                      <Divider/>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className={classes.root}>\r\n          <Button variant=\"contained\" \r\n            fullWidth \r\n            color='primary' \r\n            onClick={this.newChat} \r\n            className={classes.newChatBtn}>\r\n              Знайти користувача\r\n          </Button>\r\n          <List></List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n  newChat = () => this.props.newChatBtnFn();\r\n  selectChat = (index) => this.props.selectChatFn(index);\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);"]},"metadata":{},"sourceType":"module"}