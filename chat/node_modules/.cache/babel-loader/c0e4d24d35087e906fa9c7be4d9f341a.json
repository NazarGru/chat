{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Dashbord\\\\Dashbord.js\";\nimport React from 'react';\nimport ChatList from '../ChatList/ChatList';\nimport ChatView from '../ChatViev/Chatviev';\nimport styles from './Style';\nimport { Button, withStyles } from '@material-ui/core';\n\nconst firebase = require(\"firebase\");\n\nclass Dashbord extends React.Component {\n  constructor() {\n    super();\n\n    this.signOut = () => firebase.auth().signOut();\n\n    this.selectChat = chatIndex => {\n      console.log('h', chatIndex);\n    };\n\n    this.newChatBtnClicked = () => this.setState({\n      newChatFormVisible: true,\n      selectedChat: null\n    });\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n        if (!_usr) this.props.history.push('/login');else {\n          await firebase.firestore().collection('chats').where('users', 'array-contains', _usr.email).onSnapshot(async res => {\n            const chats = res.docs.map(_doc => _doc.data());\n            await this.setState({\n              email: _usr.email,\n              chats: chats\n            });\n            console.log(this.state);\n          });\n        }\n      });\n    };\n\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(ChatList, {\n      history: this.props.history,\n      newChatBtnFunction: this.props.newChatBtnClicked,\n      selectChatFunction: this.props.selectChat,\n      chats: this.state.chats,\n      userEmail: this.state.email,\n      selectChatIndex: this.state.selectedChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), this.state.newChatFormVisible ? null : React.createElement(ChatView, {\n      user: this.state.email,\n      chat: {\n        thi\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: classes.signOutBtn,\n      onClick: this.signOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u0412\\u0438\\u0439\\u0442\\u0438\"));\n  }\n\n}\n\nexport default withStyles(styles)(Dashbord);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Dashbord/Dashbord.js"],"names":["React","ChatList","ChatView","styles","Button","withStyles","firebase","require","Dashbord","Component","constructor","signOut","auth","selectChat","chatIndex","console","log","newChatBtnClicked","setState","newChatFormVisible","selectedChat","componentDidMount","onAuthStateChanged","_usr","props","history","push","firestore","collection","where","email","onSnapshot","res","chats","docs","map","_doc","data","state","render","classes","thi","signOutBtn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAiCjBC,OAjCiB,GAiCP,MAAML,QAAQ,CAACM,IAAT,GAAgBD,OAAhB,EAjCC;;AAAA,SAkCjBE,UAlCiB,GAkCHC,SAAD,IAAc;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,SAAjB;AACH,KApCgB;;AAAA,SAqCjBG,iBArCiB,GAqCG,MAAM,KAAKC,QAAL,CAAc;AAACC,MAAAA,kBAAkB,EAAE,IAArB;AAA2BC,MAAAA,YAAY,EAAE;AAAzC,KAAd,CArCT;;AAAA,SAsCjBC,iBAtCiB,GAsCG,MAAK;AACrBf,MAAAA,QAAQ,CAACM,IAAT,GAAgBU,kBAAhB,CAAmC,MAAMC,IAAN,IAAa;AAC5C,YAAG,CAACA,IAAJ,EACA,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EADA,KAEI;AACA,gBAAMpB,QAAQ,CACbqB,SADK,GAELC,UAFK,CAEM,OAFN,EAGLC,KAHK,CAGC,OAHD,EAGU,gBAHV,EAG4BN,IAAI,CAACO,KAHjC,EAILC,UAJK,CAIM,MAAMC,GAAN,IAAY;AACpB,kBAAMC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAArB,CAAd;AACA,kBAAM,KAAKnB,QAAL,CAAc;AAChBY,cAAAA,KAAK,EAAEP,IAAI,CAACO,KADI;AAEhBG,cAAAA,KAAK,EAAEA;AAFS,aAAd,CAAN;AAIAlB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKsB,KAAjB;AACH,WAXK,CAAN;AAYH;AACJ,OAjBD;AAkBH,KAzDgB;;AAET,SAAKA,KAAL,GAAY;AACRlB,MAAAA,YAAY,EAAE,IADN;AAERD,MAAAA,kBAAkB,EAAE,KAFZ;AAGRW,MAAAA,KAAK,EAAE,IAHC;AAIRG,MAAAA,KAAK,EAAE;AAJC,KAAZ;AAMH;;AACLM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKhB,KAAzB;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWC,OAA9B;AACA,MAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWP,iBAD/B;AAEA,MAAA,kBAAkB,EAAE,KAAKO,KAAL,CAAWX,UAF/B;AAGA,MAAA,KAAK,EAAE,KAAKyB,KAAL,CAAWL,KAHlB;AAIA,MAAA,SAAS,EAAI,KAAKK,KAAL,CAAWR,KAJxB;AAKA,MAAA,eAAe,EAAE,KAAKQ,KAAL,CAAWlB,YAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASQ,KAAKkB,KAAL,CAAWnB,kBAAX,GACA,IADA,GAEA,oBAAC,QAAD;AACA,MAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWR,KADjB;AAEA,MAAA,IAAI,EAAE;AAACW,QAAAA;AAAD,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXR,EAiBI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAED,OAAO,CAACE,UAA3B;AAAuC,MAAA,OAAO,EAAE,KAAK/B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAjBJ,CADJ;AAqBC;;AAjCsC;;AA6DvC,eAAeN,UAAU,CAACF,MAAD,CAAV,CAAmBK,QAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport ChatList from '../ChatList/ChatList';\r\nimport ChatView from '../ChatViev/Chatviev';\r\nimport styles from './Style';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Dashbord extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            selectedChat: null,\r\n            newChatFormVisible: false,\r\n            email: null,\r\n            chats: []\r\n        }\r\n    }\r\nrender(){\r\n    const { classes } = this.props;\r\nreturn(\r\n    <div>\r\n        <ChatList history={this.props.history}\r\n        newChatBtnFunction={this.props.newChatBtnClicked}\r\n        selectChatFunction={this.props.selectChat}\r\n        chats={this.state.chats}\r\n        userEmail = {this.state.email}\r\n        selectChatIndex={this.state.selectedChat} \r\n        ></ChatList>\r\n        {\r\n            this.state.newChatFormVisible ?\r\n            null :\r\n            <ChatView\r\n            user={this.state.email}\r\n            chat={{thi}}\r\n            ></ChatView>\r\n        }\r\n        \r\n        <Button className={classes.signOutBtn} onClick={this.signOut}>Вийти</Button>\r\n    </div>\r\n)\r\n}\r\nsignOut = () => firebase.auth().signOut();\r\nselectChat = (chatIndex) =>{\r\n    console.log('h', chatIndex);\r\n}\r\nnewChatBtnClicked = () => this.setState({newChatFormVisible: true, selectedChat: null});\r\ncomponentDidMount = () =>{\r\n    firebase.auth().onAuthStateChanged(async _usr =>{\r\n        if(!_usr)\r\n        this.props.history.push('/login');\r\n        else{\r\n            await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res =>{\r\n                const chats = res.docs.map(_doc => _doc.data());\r\n                await this.setState({\r\n                    email: _usr.email,\r\n                    chats: chats\r\n                });\r\n                console.log(this.state)\r\n            })\r\n        }\r\n    })\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Dashbord);"]},"metadata":{},"sourceType":"module"}