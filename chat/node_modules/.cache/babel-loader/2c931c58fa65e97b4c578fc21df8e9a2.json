{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Login\\\\Login.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './Style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (whichInput, event) => {\n      switch (whichInput) {\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitLogin = async e => {\n      e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n\n      await firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n        this.props.history.push('/dashboard');\n      }, err => {\n        this.setState({\n          serverError: true\n        });\n        console.log('Error logging in: ', err);\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      serverError: false\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"main\", {\n      className: classes.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438!\"), React.createElement(\"form\", {\n      onSubmit: e => this.submitLogin(e),\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"login-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u0435\\u043C\\u0430\\u0456\\u043B\"), React.createElement(Input, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: e => this.userTyping('email', e),\n      id: \"login-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"login-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      autoComplete: \"current-password\",\n      type: \"password\",\n      onChange: e => this.userTyping('password', e),\n      id: \"login-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\")), this.state.serverError ? React.createElement(Typography, {\n      className: classes.errorText,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Incorrect Login Information\") : null, React.createElement(\"h5\", {\n      className: classes.noAccountHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u041D\\u0435 \\u043C\\u0430\\u0454\\u0448 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\"), React.createElement(Link, {\n      className: classes.signUpLink,\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign Up!\")));\n  }\n\n}\n\nexport default withStyles(styles)(LoginComponent);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Login/Login.js"],"names":["Link","React","styles","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","firebase","require","LoginComponent","Component","constructor","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","render","classes","main","paper","form","submit","errorText","noAccountHeader","signUpLink"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA4CdC,UA5Cc,GA4CD,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAClC,cAAQD,UAAR;AACE,aAAK,OAAL;AACE,eAAKE,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAtB,WAAd;AACA;;AAEF,aAAK,UAAL;AACE,eAAKH,QAAL,CAAc;AAAEI,YAAAA,QAAQ,EAAEL,KAAK,CAACG,MAAN,CAAaC;AAAzB,WAAd;AACA;;AAEF;AACE;AAVJ;AAYD,KAzDa;;AAAA,SA2DdE,WA3Dc,GA2DA,MAAOC,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACC,cAAF,GADyB,CACL;;AAEpB,YAAMf,QAAQ,CACXgB,IADG,GAEHC,0BAFG,CAEwB,KAAKC,KAAL,CAAWT,KAFnC,EAE0C,KAAKS,KAAL,CAAWN,QAFrD,EAGHO,IAHG,CAGE,MAAM;AACV,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,OALG,EAKDC,GAAG,IAAI;AACR,aAAKf,QAAL,CAAc;AAAEgB,UAAAA,WAAW,EAAE;AAAf,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,GAAlC;AACD,OARG,CAAN;AASD,KAvEa;;AAEZ,SAAKL,KAAL,GAAa;AACXT,MAAAA,KAAK,EAAE,IADI;AAEXG,MAAAA,QAAQ,EAAE,IAFC;AAGXY,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKR,KAAzB;AAEA,WACE;AAAM,MAAA,SAAS,EAAEQ,OAAO,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAIE;AAAM,MAAA,QAAQ,EAAGhB,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAAvB;AAA4C,MAAA,SAAS,EAAEc,OAAO,CAACG,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,MAAM,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GADF,EAEE,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAC,OAApB;AAA4B,MAAA,SAAS,MAArC;AAAsC,MAAA,QAAQ,EAAGjB,CAAD,IAAO,KAAKT,UAAL,CAAgB,OAAhB,EAAyBS,CAAzB,CAAvD;AAAoF,MAAA,EAAE,EAAC,mBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,WAAD;AAAa,MAAA,QAAQ,MAArB;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,MAAM,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHADF,EAEE,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAC,kBAApB;AAAuC,MAAA,IAAI,EAAC,UAA5C;AAAuD,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKT,UAAL,CAAgB,UAAhB,EAA4BS,CAA5B,CAAxE;AAAwG,MAAA,EAAE,EAAC,sBAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,EASE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,MAA/B;AAAgC,MAAA,OAAO,EAAC,WAAxC;AAAoD,MAAA,KAAK,EAAC,SAA1D;AAAoE,MAAA,SAAS,EAAEc,OAAO,CAACI,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CATF,CAJF,EAeI,KAAKd,KAAL,CAAWM,WAAX,GACA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEI,OAAO,CAACK,SAA/B;AAA0C,MAAA,SAAS,EAAC,IAApD;AAAyD,MAAA,OAAO,EAAC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADA,GAIA,IAnBJ,EAqBE;AAAI,MAAA,SAAS,EAAEL,OAAO,CAACM,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FArBF,EAsBE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEN,OAAO,CAACO,UAAzB;AAAqC,MAAA,EAAE,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,CAFF,CADF;AA6BD;;AA5C0C;;AA6E7C,eAAevC,UAAU,CAACL,MAAD,CAAV,CAAmBW,cAAnB,CAAf","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './Style';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      serverError: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Увійти!\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-email-input'>Введіть свій емаіл</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-password-input'>Введіть свій пароль</InputLabel>\r\n              <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Увійти</Button>\r\n          </form>\r\n          { this.state.serverError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              Incorrect Login Information\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.noAccountHeader}>Не маєш акаунта?</h5>\r\n          <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  submitLogin = async (e) => {\r\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.props.history.push('/dashboard');\r\n      }, err => {\r\n        this.setState({ serverError: true });\r\n        console.log('Error logging in: ', err);\r\n      });\r\n  };\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoginComponent);"]},"metadata":{},"sourceType":"module"}