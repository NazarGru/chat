{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Singup\\\\Singup.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport styles from './Style';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst firebase = require(\"firebase\");\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (whichInput, event) => {\n      switch (whichInput) {\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: event.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    this.submitSignup = e => {\n      e.preventDefault();\n\n      if (!this.formIsValid()) {\n        this.setState({\n          signupError: 'Паролі не співпадать'\n        });\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(authRes => {\n        const userObj = {\n          email: authRes.user.email,\n          friends: [],\n          messages: []\n        };\n        firebase.firestore().collection('users').doc(this.state.email).set(userObj).then(() => {\n          this.props.history.push('/dashbord');\n        }, dbErr => {\n          console.log('Failed to add user to the database: ', dbErr);\n          this.setState({\n            signupError: 'Помилка не можливо додати користувача'\n          });\n        });\n      }, authErr => {\n        console.log('Failed to create user: ', authErr);\n        this.setState({\n          signupError: 'Помилка не можливо додати користувача'\n        });\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"main\", {\n      className: classes.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Sign Up!\"), React.createElement(\"form\", {\n      onSubmit: e => this.submitSignup(e),\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u0435\\u043C\\u0430\\u0456\\u043B\"), React.createElement(Input, {\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: e => this.userTyping('email', e),\n      id: \"signup-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('password', e),\n      id: \"signup-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      required: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"signup-password-confirmation-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('passwordConfirmation', e),\n      id: \"signup-password-confirmation-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Submit\")), this.state.signupError ? React.createElement(Typography, {\n      className: classes.errorText,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.signupError) : null, React.createElement(\"h5\", {\n      className: classes.hasAccountHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0448 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\"), React.createElement(Link, {\n      className: classes.logInLink,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438!\")));\n  }\n\n}\n\nexport default withStyles(styles)(SignupComponent);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Singup/Singup.js"],"names":["Link","React","styles","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","firebase","require","SignupComponent","Component","constructor","userTyping","whichInput","event","setState","email","target","value","password","passwordConfirmation","formIsValid","state","submitSignup","e","preventDefault","signupError","auth","createUserWithEmailAndPassword","then","authRes","userObj","user","friends","messages","firestore","collection","doc","set","props","history","push","dbErr","console","log","authErr","render","classes","main","paper","form","submit","errorText","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './Style';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up!\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-email-input'>Введіть свій емаіл</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-input'>Придумайте пароль</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-confirmation-input'>Повторіть свій пароль</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\r\n          </form>\r\n          { \r\n            this.state.signupError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              {this.state.signupError}\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.hasAccountHeader}>Вже маєш акаунт?</h5>\r\n          <Link className={classes.logInLink} to='/'>Увійти!</Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  submitSignup = (e) => {\r\n    e.preventDefault(); \r\n\r\n    if(!this.formIsValid()) {\r\n      this.setState({ signupError: 'Паролі не співпадать' });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(authRes => {\r\n        const userObj = {\r\n          email: authRes.user.email,\r\n          friends: [],\r\n          messages: []\r\n        };\r\n        firebase\r\n          .firestore()\r\n          .collection('users')\r\n          .doc(this.state.email)\r\n          .set(userObj)\r\n          .then(() => {\r\n            this.props.history.push('/dashbord');\r\n        }, dbErr => {\r\n          console.log('Failed to add user to the database: ', dbErr);\r\n          this.setState({ signupError: 'Помилка не можливо додати користувача' });\r\n        });\r\n    }, authErr => {\r\n      console.log('Failed to create user: ', authErr);\r\n      this.setState({ signupError: 'Помилка не можливо додати користувача' });\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(SignupComponent);"]},"metadata":{},"sourceType":"module"}