{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import NewChatComponent from'../NewChat/NewChat';import ChatListComponent from'../ChatList/ChatList';import ChatViewComponent from'../ChatViev/Chatviev';import ChatTextBoxComponent from'../ChatTextBox/ChatTextBox';import styles from'./Style';import{Button,withStyles}from'@material-ui/core';var firebase=require(\"firebase\");var DashboardComponent=/*#__PURE__*/function(_React$Component){_inherits(DashboardComponent,_React$Component);function DashboardComponent(){var _this;_classCallCheck(this,DashboardComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(DashboardComponent).call(this));_this.signOut=function(){return firebase.auth().signOut();};_this.submitMessage=function(msg){var docKey=_this.buildDocKey(_this.state.chats[_this.state.selectedChat].users.filter(function(_usr){return _usr!==_this.state.email;})[0]);firebase.firestore().collection('chats').doc(docKey).update({messages:firebase.firestore.FieldValue.arrayUnion({sender:_this.state.email,message:msg,timestamp:Date.now()}),receiverHasRead:false});};_this.buildDocKey=function(friend){return[_this.state.email,friend].sort().join(':');};_this.newChatBtnClicked=function(){return _this.setState({newChatFormVisible:true,selectedChat:null});};_this.newChatSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(chatObj){var docKey;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:docKey=_this.buildDocKey(chatObj.sendTo);_context.next=3;return firebase.firestore().collection('chats').doc(docKey).set({messages:[{message:chatObj.message,sender:_this.state.email}],users:[_this.state.email,chatObj.sendTo],receiverHasRead:false});case 3:_this.setState({newChatFormVisible:false});_this.selectChat(_this.state.chats.length-1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.selectChat=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chatIndex){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.setState({selectedChat:chatIndex,newChatFormVisible:false});case 2:_this.messageRead();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.goToChat=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(docKey,msg){var usersInChat,chat;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:usersInChat=docKey.split(':');chat=_this.state.chats.find(function(_chat){return usersInChat.every(function(_user){return _chat.users.includes(_user);});});_this.setState({newChatFormVisible:false});_context3.next=5;return _this.selectChat(_this.state.chats.indexOf(chat));case 5:_this.submitMessage(msg);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();_this.messageRead=function(){var chatIndex=_this.state.selectedChat;var docKey=_this.buildDocKey(_this.state.chats[chatIndex].users.filter(function(_usr){return _usr!==_this.state.email;})[0]);if(_this.clickedMessageWhereNotSender(chatIndex)){firebase.firestore().collection('chats').doc(docKey).update({receiverHasRead:true});}else{console.log('Clicked message where the user was the sender');}};_this.clickedMessageWhereNotSender=function(chatIndex){return _this.state.chats[chatIndex].messages[_this.state.chats[chatIndex].messages.length-1].sender!==_this.state.email;};_this.componentWillMount=function(){firebase.auth().onAuthStateChanged(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_usr){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(_usr){_context5.next=4;break;}_this.props.history.push('/');_context5.next=6;break;case 4:_context5.next=6;return firebase.firestore().collection('chats').where('users','array-contains',_usr.email).onSnapshot(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res){var chats;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:chats=res.docs.map(function(_doc){return _doc.data();});_context4.next=3;return _this.setState({email:_usr.email,chats:chats,friends:[]});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x6){return _ref5.apply(this,arguments);};}());case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref4.apply(this,arguments);};}());};_this.state={selectedChat:null,newChatFormVisible:false,email:null,friends:[],chats:[]};return _this;}_createClass(DashboardComponent,[{key:\"render\",value:function render(){var classes=this.props.classes;if(this.state.email){return React.createElement(\"div\",{className:\"dashboard-container\",id:\"dashboard-container\"},React.createElement(ChatListComponent,{history:this.props.history,userEmail:this.state.email,selectChatFn:this.selectChat,chats:this.state.chats,selectedChatIndex:this.state.selectedChat,newChatBtnFn:this.newChatBtnClicked}),this.state.newChatFormVisible?null:React.createElement(ChatViewComponent,{user:this.state.email,chat:this.state.chats[this.state.selectedChat]}),this.state.selectedChat!==null&&!this.state.newChatFormVisible?React.createElement(ChatTextBoxComponent,{userClickedInputFn:this.messageRead,submitMessageFn:this.submitMessage}):null,this.state.newChatFormVisible?React.createElement(NewChatComponent,{goToChatFn:this.goToChat,newChatSubmitFn:this.newChatSubmit}):null,React.createElement(Button,{onClick:this.signOut,className:classes.signOutBtn},\"Sign Out\"));}else{return React.createElement(\"div\",null,\"LOADING....\");}}}]);return DashboardComponent;}(React.Component);export default withStyles(styles)(DashboardComponent);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Dashbord/Dashbord.js"],"names":["React","NewChatComponent","ChatListComponent","ChatViewComponent","ChatTextBoxComponent","styles","Button","withStyles","firebase","require","DashboardComponent","signOut","auth","submitMessage","msg","docKey","buildDocKey","state","chats","selectedChat","users","filter","_usr","email","firestore","collection","doc","update","messages","FieldValue","arrayUnion","sender","message","timestamp","Date","now","receiverHasRead","friend","sort","join","newChatBtnClicked","setState","newChatFormVisible","newChatSubmit","chatObj","sendTo","set","selectChat","length","chatIndex","messageRead","goToChat","usersInChat","split","chat","find","_chat","every","_user","includes","indexOf","clickedMessageWhereNotSender","console","log","componentWillMount","onAuthStateChanged","props","history","push","where","onSnapshot","res","docs","map","_doc","data","friends","classes","signOutBtn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewChatComponent from '../NewChat/NewChat';\r\nimport ChatListComponent from '../ChatList/ChatList';\r\nimport ChatViewComponent from '../ChatViev/Chatviev';\r\nimport ChatTextBoxComponent from '../ChatTextBox/ChatTextBox';\r\nimport styles from './Style';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      friends: [],\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.state.email) {\r\n      return(\r\n        <div className='dashboard-container' id='dashboard-container'>\r\n          <ChatListComponent history={this.props.history} \r\n            userEmail={this.state.email} \r\n            selectChatFn={this.selectChat} \r\n            chats={this.state.chats} \r\n            selectedChatIndex={this.state.selectedChat}\r\n            newChatBtnFn={this.newChatBtnClicked}>\r\n          </ChatListComponent>\r\n          {\r\n            this.state.newChatFormVisible ? null : <ChatViewComponent \r\n              user={this.state.email} \r\n              chat={this.state.chats[this.state.selectedChat]}>\r\n            </ChatViewComponent>\r\n          }\r\n          { \r\n            this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null \r\n          }\r\n          {\r\n            this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\r\n          }\r\n          <Button onClick={this.signOut} className={classes.signOutBtn}>Sign Out</Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(<div>LOADING....</div>);\r\n    }\r\n  }\r\n\r\n  signOut = () => firebase.auth().signOut();\r\n\r\n  submitMessage = (msg) => {\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\r\n      .users\r\n      .filter(_usr => _usr !== this.state.email)[0])\r\n    firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }),\r\n        receiverHasRead: false\r\n      });\r\n  }\r\n\r\n  // Always in alphabetical order:\r\n  // 'user1:user2'\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\r\n\r\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await \r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .set({\r\n          messages: [{\r\n            message: chatObj.message,\r\n            sender: this.state.email\r\n          }],\r\n          users: [this.state.email, chatObj.sendTo],\r\n          receiverHasRead: false\r\n        })\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  }\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  }\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  }\r\n\r\n  messageRead = () => {\r\n    const chatIndex = this.state.selectedChat;\r\n    const docKey = this.buildDocKey(this.state.chats[chatIndex].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    if(this.clickedMessageWhereNotSender(chatIndex)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log('Clicked message where the user was the sender');\r\n    }\r\n  }\r\n\r\n  clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\r\n\r\n  componentWillMount = () => {\r\n      firebase.auth().onAuthStateChanged(async _usr => {\r\n        if(!_usr)\r\n          this.props.history.push('/');\r\n        else {\r\n          await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res => {\r\n              const chats = res.docs.map(_doc => _doc.data());\r\n              await this.setState({\r\n                email: _usr.email,\r\n                chats: chats,\r\n                friends: []\r\n              });\r\n            })\r\n        }\r\n    });\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);"]},"metadata":{},"sourceType":"module"}