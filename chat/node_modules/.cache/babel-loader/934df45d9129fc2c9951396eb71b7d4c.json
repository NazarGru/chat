{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import Avatar from'@material-ui/core/Avatar';import Typography from'@material-ui/core/Typography';import styles from'./Style';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import ListItemIcon from'@material-ui/core/ListItemIcon';import NotificationImportant from'@material-ui/icons/NotificationImportant';var ChatList=/*#__PURE__*/function(_React$Component){_inherits(ChatList,_React$Component);function ChatList(){var _getPrototypeOf2;var _this;_classCallCheck(this,ChatList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ChatList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.newChat=function(){console.log('new chat click');};_this.selectChat=function(index){_this.props.selectChatFunction(index);};_this.userIsSender=function(chat){return chat.messages[chat.messages.length-1].sender===_this.props.userEmail;};return _this;}_createClass(ChatList,[{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;if(this.props.chats.length>0){return React.createElement(\"div\",{className:classes.root},React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",onClick:this.newChat,className:classes.newChatBtn},\"\\u041D\\u043E\\u0432\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\"),React.createElement(List,null,this.props.chats.map(function(_chat,_index){return React.createElement(\"div\",{key:_index},React.createElement(ListItem,{onClick:function onClick(){return _this2.selectChat(_index);},className:classes.listItem,selected:_this2.props.selectedChatIndex===_index,alignItems:\"flex-start\"},React.createElement(ListItemAvatar,null,React.createElement(Avatar,{alt:\"Remy Sharp\"},_chat.users.filter(function(_user){return _user!==_this2.props.userEmail;})[0].split('')[0])),React.createElement(ListItemText,{primary:_chat.users.filter(function(_user){return _user!==_this2.props.userEmail;})[0],secondary:React.createElement(React.Fragment,null,React.createElement(Typography,{component:\"span\",color:\"textPrimary\"},_chat.messages[_chat.messages.length-1].message.substring(0,30)+' ...'))}),_chat.receiverHasRed===false&&!_this2.userIsSender(_chat)?React.createElement(ListItemIcon,null,React.createElement(NotificationImportant,{className:classes.unreadMessage})):null),React.createElement(Divider,null));})));}else{return React.createElement(\"div\",{className:classes.root},React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",onClick:this.newChat,className:classes.newChatBtn},\"\\u041D\\u043E\\u0432\\u0435 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\"),React.createElement(List,null));}}}]);return ChatList;}(React.Component);export default withStyles(styles)(ChatList);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/ChatList/ChatList.js"],"names":["React","withStyles","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","styles","Divider","Button","ListItemIcon","NotificationImportant","ChatList","newChat","console","log","selectChat","index","props","selectChatFunction","userIsSender","chat","messages","length","sender","userEmail","classes","chats","root","newChatBtn","map","_chat","_index","listItem","selectedChatIndex","users","filter","_user","split","message","substring","receiverHasRed","unreadMessage","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Style';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatList extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n    \r\n        if(this.props.chats.length > 0) {\r\n          return(\r\n            <div className={classes.root}>\r\n                <Button variant=\"contained\" \r\n                  fullWidth \r\n                  color='primary' \r\n                  onClick={this.newChat} \r\n                  className={classes.newChatBtn}>\r\n                    Нове повідомлення\r\n                </Button>\r\n                <List>\r\n                  {\r\n                    this.props.chats.map((_chat, _index) => {\r\n                      return (\r\n                        <div key={_index}>\r\n                          <ListItem onClick={() => this.selectChat(_index)} \r\n                            className={classes.listItem} \r\n                            selected={this.props.selectedChatIndex === _index} \r\n                            alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                              <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText \r\n                              primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\r\n                              secondary={\r\n                                <React.Fragment>\r\n                                  <Typography component='span'\r\n                                    color='textPrimary'>\r\n                                      {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\r\n                                  </Typography>\r\n                                </React.Fragment>\r\n                              }/>\r\n                              {\r\n                                _chat.receiverHasRed === false && !this.userIsSender(_chat) ? \r\n                                <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                                null\r\n                              }\r\n                          </ListItem>\r\n                          <Divider/>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </List>\r\n            </div>\r\n          );\r\n        } else {\r\n          return(\r\n            <div className={classes.root}>\r\n              <Button variant=\"contained\" \r\n                fullWidth \r\n                color='primary' \r\n                onClick={this.newChat} \r\n                className={classes.newChatBtn}>\r\n                  Нове повідомлення\r\n              </Button>\r\n              <List></List>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n  newChat =() =>{\r\n      console.log('new chat click')\r\n  }\r\n  selectChat = (index) =>{\r\n      this.props.selectChatFunction(index);\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail\r\n}\r\nexport default withStyles(styles)(ChatList);"]},"metadata":{},"sourceType":"module"}