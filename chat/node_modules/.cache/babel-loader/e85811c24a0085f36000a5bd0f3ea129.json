{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Dashbord\\\\Dashbord.js\";\nimport React from 'react';\nimport ChatList from '../ChatList/ChatList';\nimport ChatView from '../ChatViev/Chatviev';\nimport ChatTextBox from '../ChatTextBox/ChatTextBox';\nimport styles from './Style';\nimport { Button, withStyles } from '@material-ui/core';\nimport NewChat from '../NewChat/NewChat';\n\nconst firebase = require(\"firebase\");\n\nclass Dashbord extends React.Component {\n  constructor() {\n    super();\n\n    this.signOut = () => firebase.auth().signOut();\n\n    this.selectChat = async chatIndex => {\n      await this.setState({\n        selectedChat: chatIndex\n      });\n      this.messageRead();\n    };\n\n    this.submitMessage = msg => {\n      const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\n      firebase.firestore().collection('chats').doc(docKey).update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          sender: this.state.email,\n          message: msg,\n          timestap: Date.now()\n        }),\n        receiverHasRed: false\n      });\n    };\n\n    this.buildDocKey = friend => [this.state.email, friend].sort().join(':');\n\n    this.newChatBtnClicked = () => this.setState({\n      newChatFormVisible: true,\n      selectedChat: null\n    });\n\n    this.messageRead = () => {\n      const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\n\n      if (this.clicKedChatWhereNotSen(this.state.selectedChat)) {\n        firebase.firestore().collection('chats').doc(docKey).update({\n          receiverHasRed: true\n        });\n      } else {}\n    };\n\n    this.goToChat = async (docKey, msg) => {\n      const usersInChat = docKey.split(':');\n      const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\n      this.setState({\n        newChatFormVisible: false\n      });\n      await this.selectChat(this.state.chats.indexOf(chat));\n      this.submitMessage(msg);\n    };\n\n    this.newChatSubmit = async chatObj => {\n      const docKey = this.buildDocKey(chatObj.seтв);\n    };\n\n    this.clicKedChatWhereNotSen = chatIndex => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(async _usr => {\n        if (!_usr) this.props.history.push('/');else {\n          await firebase.firestore().collection('chats').where('users', 'array-contains', _usr.email).onSnapshot(async res => {\n            const chats = res.docs.map(_doc => _doc.data());\n            await this.setState({\n              email: _usr.email,\n              chats: chats\n            });\n            console.log(this.state);\n          });\n        }\n      });\n    };\n\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: []\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(ChatList, {\n      history: this.props.history,\n      newChatBtnFunction: this.newChatBtnClicked,\n      selectChatFunction: this.selectChat,\n      chats: this.state.chats,\n      userEmail: this.state.email,\n      selectChatIndex: this.state.selectedChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), this.state.newChatFormVisible ? null : React.createElement(ChatView, {\n      user: this.state.email,\n      chat: this.state.chats[this.state.selectedChat],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), this.state.selectedChat !== null && !this.state.newChatFormVisible ? React.createElement(ChatTextBox, {\n      submitMessageFN: this.submitMessage,\n      messageChatFN: this.messageRead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : null, this.state.newChatFormVisible ? React.createElement(NewChat, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : null, React.createElement(Button, {\n      className: classes.signOutBtn,\n      onClick: this.signOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u0412\\u0438\\u0439\\u0442\\u0438\"));\n  }\n\n}\n\nexport default withStyles(styles)(Dashbord);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Dashbord/Dashbord.js"],"names":["React","ChatList","ChatView","ChatTextBox","styles","Button","withStyles","NewChat","firebase","require","Dashbord","Component","constructor","signOut","auth","selectChat","chatIndex","setState","selectedChat","messageRead","submitMessage","msg","docKey","buildDocKey","state","chats","users","filter","_usr","email","firestore","collection","doc","update","messages","FieldValue","arrayUnion","sender","message","timestap","Date","now","receiverHasRed","friend","sort","join","newChatBtnClicked","newChatFormVisible","clicKedChatWhereNotSen","goToChat","usersInChat","split","chat","find","_chat","every","_user","includes","indexOf","newChatSubmit","chatObj","seтв","length","componentDidMount","onAuthStateChanged","props","history","push","where","onSnapshot","res","docs","map","_doc","data","console","log","render","classes","signOutBtn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ChatList from '../ChatList/ChatList';\r\nimport ChatView from '../ChatViev/Chatviev';\r\nimport ChatTextBox from '../ChatTextBox/ChatTextBox';\r\nimport styles from './Style';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport NewChat from '../NewChat/NewChat';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Dashbord extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            selectedChat: null,\r\n            newChatFormVisible: false,\r\n            email: null,\r\n            chats: []\r\n        }\r\n    }\r\nrender(){\r\n    const { classes } = this.props;\r\nreturn(\r\n    <div>\r\n        <ChatList history={this.props.history}\r\n        newChatBtnFunction={this.newChatBtnClicked}\r\n        selectChatFunction={this.selectChat}\r\n        chats={this.state.chats}\r\n        userEmail = {this.state.email}\r\n        selectChatIndex={this.state.selectedChat} \r\n        ></ChatList>\r\n        {\r\n            this.state.newChatFormVisible ?\r\n            null :\r\n            <ChatView\r\n            user={this.state.email}\r\n            chat={this.state.chats[this.state.selectedChat]}\r\n            ></ChatView>\r\n        }\r\n        {\r\n            this.state.selectedChat !== null && ! this.state.newChatFormVisible ?\r\n            <ChatTextBox\r\n            submitMessageFN={this.submitMessage}\r\n            messageChatFN={this.messageRead}\r\n            ></ChatTextBox> : null\r\n        }\r\n        {\r\n            this.state.newChatFormVisible ? <NewChat></NewChat>:null\r\n        }\r\n        \r\n        <Button className={classes.signOutBtn} onClick={this.signOut}>Вийти</Button>\r\n    </div>\r\n)\r\n}\r\nsignOut = () => firebase.auth().signOut();\r\nselectChat = async (chatIndex) =>{\r\n   await this.setState({selectedChat: chatIndex});\r\n   this.messageRead();\r\n}\r\nsubmitMessage = (msg) =>{\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    firebase\r\n    .firestore()\r\n    .collection('chats')\r\n    .doc(docKey)\r\n    .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n           sender: this.state.email,\r\n           message:  msg,\r\n           timestap: Date.now()\r\n        }),\r\n        receiverHasRed: false\r\n    })\r\n}\r\n\r\nbuildDocKey = (friend) =>[this.state.email, friend].sort().join(':');\r\nnewChatBtnClicked = () => this.setState({newChatFormVisible: true, selectedChat: null});\r\nmessageRead = () =>{\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    if(this.clicKedChatWhereNotSen(this.state.selectedChat)){\r\n        firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({receiverHasRed: true})\r\n    } else {\r\n\r\n    }\r\n}\r\ngoToChat = async (docKey, msg) =>{\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n    this.setState({newChatFormVisible: false});\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n}\r\nnewChatSubmit = async (chatObj) =>{\r\n    const docKey= this.buildDocKey(chatObj.seтв)\r\n}\r\n\r\nclicKedChatWhereNotSen = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length -1].sender !== this.state.email;\r\n\r\ncomponentDidMount = () =>{\r\n    firebase.auth().onAuthStateChanged(async _usr =>{\r\n        if(!_usr)\r\n        this.props.history.push('/');\r\n        else{\r\n            await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res =>{\r\n                const chats = res.docs.map(_doc => _doc.data());\r\n                await this.setState({\r\n                    email: _usr.email,\r\n                    chats: chats\r\n                });\r\n                console.log(this.state)\r\n            })\r\n        }\r\n    })\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Dashbord);"]},"metadata":{},"sourceType":"module"}