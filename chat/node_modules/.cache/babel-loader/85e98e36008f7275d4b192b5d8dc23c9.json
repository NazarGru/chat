{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazar\\\\Desktop\\\\\\u043F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0456\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u0438\\u0439 \\u0447\\u0430\\u0442\\\\chat\\\\src\\\\Login\\\\Login.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './Style';\n\nconst firebase = require(\"firebase\");\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (whichInput, event) => {\n      switch (whichInput) {\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.submitSignup = e => {\n      e.preventDefault();\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {}, err => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      loginError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"main\", {\n      className: classes.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"), React.createElement(\"form\", {\n      onSubmit: e => this.submitLogin(e),\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      require: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"login-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 email\"), React.createElement(Input, {\n      onChange: e => this.userTyping('email', e),\n      autoComplete: \"email\",\n      autoFocus: true,\n      id: \"login-email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      require: true,\n      fullWidth: true,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"login-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0441\\u0432\\u0456\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), React.createElement(Input, {\n      type: \"password\",\n      onChange: e => this.userTyping('password', e),\n      id: \"login-password-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      className: classes.submit,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\")), this.state.loginError ? React.createElement(Typography, {\n      className: classes.signupError,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.loginError) : null, React.createElement(Typography, {\n      className: classes.hasAccountHeader,\n      component: \"h5\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u0429\\u0435 \\u043D\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\"), React.createElement(Link, {\n      to: \"/singup\",\n      className: classes.logInLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044C\")));\n  }\n\n}\n\nexport default withStyles(styles)(Login);","map":{"version":3,"sources":["C:/Users/nazar/Desktop/портфоліо простий чат/chat/src/Login/Login.js"],"names":["Link","React","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","firebase","require","Login","Component","constructor","userTyping","whichInput","event","setState","email","target","value","password","submitSignup","e","preventDefault","auth","signInWithEmailAndPassword","state","then","err","error","passwordConfirmation","loginError","render","classes","props","main","paper","submitLogin","form","submit","signupError","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './Style';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            email: null,\r\n            password: null,\r\n            passwordConfirmation: null,\r\n            loginError: ''\r\n        }\r\n    }\r\n\r\n\r\nrender(){\r\n    const { classes } = this.props;\r\nreturn(\r\n    <main className={classes.main}>\r\n    <CssBaseline></CssBaseline>\r\n    <Paper className={classes.paper}>\r\n        <Typography component='h1' variant='h5'>\r\n            Увійти\r\n        </Typography>\r\n        <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n        <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='login-email-input'>\r\n                        Введіть свій email\r\n                    </InputLabel>\r\n                    <Input onChange={(e) => this.userTyping('email', e)} autoComplete='email'autoFocus id='login-email-input' ></Input>\r\n        </FormControl>\r\n        <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='login-password-input'>\r\n                        Введіть свій пароль\r\n                    </InputLabel>\r\n                    <Input type='password' onChange={(e) => this.userTyping('password', e)}  id='login-password-input' ></Input>\r\n        </FormControl>\r\n        <Button type='submit' className={classes.submit} fullWidth variant='contained' color='primary'>Увійти</Button>\r\n        </form>\r\n        {\r\n                this.state.loginError ?\r\n                <Typography className={classes.signupError}component='h5' variant='h6'>\r\n                    {this.state.loginError}\r\n                </Typography> :\r\n                null\r\n            }\r\n        <Typography className={classes.hasAccountHeader} component='h5' variant='h6'>Ще не маєте акаунт?</Typography>\r\n            <Link to='/singup' className={classes.logInLink}>Зареєструватись</Link>\r\n    </Paper>    \r\n    </main>\r\n)\r\n}\r\nuserTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  submitSignup = (e) => {\r\n    e.preventDefault(); \r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() =>{\r\n\r\n      }, err =>{\r\n          this.setState({error})\r\n      })\r\n        \r\n\r\n      \r\n}\r\n}\r\nexport default withStyles(styles)(Login);"]},"metadata":{},"sourceType":"module"}