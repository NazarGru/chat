{"version":3,"sources":["serviceWorker.js","Login/Style.js","Login/Login.js","Singup/Style.js","Singup/Singup.js","ChatList/Style.js","ChatList/ChatList.js","ChatViev/Style.js","ChatViev/Chatviev.js","ChatTextBox/Style.js","ChatTextBox/ChatTextBox.js","Dashbord/Style.js","Dashbord/Dashbord.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","hasAccountHeader","logInLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","Login","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","e","a","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","onChange","id","type","Button","noAccountHeader","signUpLink","to","React","Component","withStyles","Singup","formIsValidation","passwordConfirmation","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","friends","messages","firestore","collection","doc","set","dbErr","signupError","authErr","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatList","newChat","selectChat","index","selectChatFunction","userIsSender","chat","length","sender","userEmail","chats","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","message","substring","receiverHasRed","ListItemIcon","Divider","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatView","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_usr","_msg","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBox","keyCode","submitMessage","chatText","messageValid","txt","replace","submitMessageFN","userClickedInput","messageChatFN","TextField","placeholder","onKeyUp","onFocus","signOutBtn","Dashbord","signOut","chatIndex","selectedChat","messageRead","msg","docKey","buildDocKey","update","FieldValue","arrayUnion","timestap","Date","now","friend","sort","join","newChatBtnClicked","newChatFormVisible","clicKedChatWhereNotSen","onAuthStateChanged","where","onSnapshot","res","docs","_doc","data","newChatBtnFunction","selectChatIndex","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","routing","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b13c21e6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n    hasAccountHeader: {\r\n      width: '100%'\r\n    },\r\n    logInLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder'\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './Style';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          email: null,\r\n          password: null,\r\n          serverError: false\r\n        };\r\n      }\r\n    \r\n      render() {\r\n    \r\n        const { classes } = this.props;\r\n    \r\n        return (\r\n          <main className={classes.main}>\r\n            <CssBaseline/>\r\n            <Paper className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Увійти!\r\n              </Typography>\r\n              <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n                <FormControl required fullWidth margin='normal'>\r\n                  <InputLabel htmlFor='login-email-input'>Введіть свій емаіл</InputLabel>\r\n                  <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\r\n                </FormControl>\r\n                <FormControl required fullWidth margin='normal'>\r\n                  <InputLabel htmlFor='login-password-input'>Введіть свій пароль</InputLabel>\r\n                  <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\r\n                </FormControl>\r\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\r\n              </form>\r\n              { this.state.serverError ? \r\n                <Typography className={classes.errorText} component='h5' variant='h6'>\r\n                  Incorrect Login Information\r\n                </Typography> :\r\n                null\r\n              }\r\n              <h5 className={classes.noAccountHeader}>Ще не маєте акаунта?</h5>\r\n              <Link className={classes.signUpLink} to='/singup'>Зареєструватися</Link>\r\n            </Paper>\r\n          </main>\r\n        );\r\n      }\r\n    \r\n      userTyping = (whichInput, event) => {\r\n        switch (whichInput) {\r\n          case 'email':\r\n            this.setState({ email: event.target.value });\r\n            break;\r\n    \r\n          case 'password':\r\n            this.setState({ password: event.target.value });\r\n            break;\r\n    \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    \r\n      submitLogin = async (e) => {\r\n        e.preventDefault(); \r\n    \r\n        await firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n          .then(() => {\r\n            this.props.history.push('/dashbord');\r\n          }, err => {\r\n            this.setState({ serverError: true });\r\n            console.log('Error logging in: ', err);\r\n          });\r\n      };\r\n    \r\n    }\r\n    \r\nexport default withStyles(styles)(Login);","const styles = theme => ({\r\n    main: {\r\n      width: 'auto',\r\n      display: 'block', // Fix IE 11 issue.\r\n      marginLeft: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 3,\r\n      [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing.unit * 8,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n    hasAccountHeader: {\r\n      width: '100%'\r\n    },\r\n    logInLink: {\r\n      width: '100%',\r\n      textDecoration: 'none',\r\n      color: '#303f9f',\r\n      fontWeight: 'bolder'\r\n    },\r\n    errorText: {\r\n      color: 'red',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './Style';\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\nclass Singup extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            email: null,\r\n            password: null,\r\n            passwordConfirmation: null,\r\n            signupError: ''\r\n        }\r\n    }\r\n\r\nrender(){\r\n    const { classes } = this.props;\r\n\r\nreturn(\r\n    <main className={classes.main}>\r\n        <CssBaseline></CssBaseline>\r\n        <Paper className={classes.paper}>\r\n            <Typography component='h1' variant='h5'>\r\n                Зареєструватись\r\n            </Typography>\r\n            <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-email-input'>\r\n                        Введіть свій email\r\n                    </InputLabel>\r\n                    <Input onChange={(e) => this.userTyping('email', e)} autoComplete='email'autoFocus id='signup-email-input' ></Input>\r\n                </FormControl>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-password-input'>\r\n                        Придумайте пароль\r\n                    </InputLabel>\r\n                    <Input type='password' onChange={(e) => this.userTyping('password', e)}  id='signup-password-input' ></Input>\r\n                </FormControl>\r\n                <FormControl require fullWidth margin='normal' >\r\n                    <InputLabel htmlFor='signup-password=confirmation-input'>\r\n                        Повторіть пароль \r\n                    </InputLabel>\r\n                    <Input type='password' onChange={(e) => this.userTyping('passwordConfirmation', e)}  id='signup-password=confirmation-input' ></Input>\r\n                </FormControl>\r\n                <Button type='submit' className={classes.submit} fullWidth variant='contained' color='primary'>Зареєструватись</Button>\r\n            </form>\r\n            {\r\n                this.state.signupError ?\r\n                <Typography className={classes.signupError}component='h5' variant='h6'>\r\n                    {this.state.signupError}\r\n                </Typography> :\r\n                null\r\n            }\r\n            <Typography className={classes.hasAccountHeader} component='h5' variant='h6'>Ви вже маєте акаунт</Typography>\r\n            <Link to='/login' className={classes.logInLink}>Увійти</Link>\r\n\r\n        </Paper>\r\n\r\n    </main>\r\n)\r\n}\r\nformIsValidation = () => this.state.password === this.state.passwordConfirmation;\r\n\r\nuserTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  submitSignup = (e) => {\r\n    e.preventDefault(); \r\n\r\n    if(!this.formIsValidation()) {\r\n      this.setState({ signupError: 'паролі не співпадають' });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(authRes => {\r\n        const userObj = {\r\n          email: authRes.user.email,\r\n          friends: [],\r\n          messages: []\r\n        };\r\n        firebase\r\n          .firestore()\r\n          .collection('users')\r\n          .doc(this.state.email)\r\n          .set(userObj)\r\n          .then(() => {\r\n            this.props.history.push('/dashbord');\r\n        }, dbErr => {\r\n          console.log('Failed to add user to the database: ', dbErr);\r\n          this.setState({ signupError: 'Failed to add user' });\r\n        });\r\n    }, authErr => {\r\n      console.log('Failed to create user: ', authErr);\r\n      this.setState({ signupError: 'Failed to add user' });\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Singup);","const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Style';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatList extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n    \r\n        if(this.props.chats.length > 0) {\r\n          return(\r\n            <div className={classes.root}>\r\n                <Button variant=\"contained\" \r\n                  fullWidth \r\n                  color='primary' \r\n                  onClick={this.newChat} \r\n                  className={classes.newChatBtn}>\r\n                    Нове повідомлення\r\n                </Button>\r\n                <List>\r\n                  {\r\n                    this.props.chats.map((_chat, _index) => {\r\n                      return (\r\n                        <div key={_index}>\r\n                          <ListItem onClick={() => this.selectChat(_index)} \r\n                            className={classes.listItem} \r\n                            selected={this.props.selectedChatIndex === _index} \r\n                            alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                              <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText \r\n                              primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\r\n                              secondary={\r\n                                <React.Fragment>\r\n                                  <Typography component='span'\r\n                                    color='textPrimary'>\r\n                                      {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\r\n                                  </Typography>\r\n                                </React.Fragment>\r\n                              }/>\r\n                              {\r\n                                _chat.receiverHasRed === false && !this.userIsSender(_chat) ? \r\n                                <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                                null\r\n                              }\r\n                          </ListItem>\r\n                          <Divider/>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </List>\r\n            </div>\r\n          );\r\n        } else {\r\n          return(\r\n            <div className={classes.root}>\r\n              <Button variant=\"contained\" \r\n                fullWidth \r\n                color='primary' \r\n                onClick={this.newChat} \r\n                className={classes.newChatBtn}>\r\n                  Нове повідомлення\r\n              </Button>\r\n              <List></List>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n  newChat =() =>{\r\n      console.log('new chat click')\r\n  }\r\n  selectChat = (index) =>{\r\n      this.props.selectChatFunction(index);\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail\r\n}\r\nexport default withStyles(styles)(ChatList);","const styles = theme => ({\r\n\r\n    content: {\r\n      height: 'calc(100vh - 100px)',\r\n      overflow: 'auto',\r\n      padding: '25px',\r\n      marginLeft: '300px',\r\n      boxSizing: 'border-box',\r\n      overflowY: 'scroll',\r\n      top: '50px',\r\n      width: 'calc(100% - 300px)',\r\n      position: 'absolute'\r\n    },\r\n  \r\n    userSent: {\r\n      float: 'left',\r\n      clear: 'both',\r\n      padding: '20px',\r\n      boxSizing: 'border-box',\r\n      wordWrap: 'break-word',\r\n      marginTop: '10px',\r\n      backgroundColor: '#707BC4',\r\n      color: 'white',\r\n      width: '300px',\r\n      borderRadius: '10px'\r\n    },\r\n  \r\n    friendSent: {\r\n      float: 'right',\r\n      clear: 'both',\r\n      padding: '20px',\r\n      boxSizing: 'border-box',\r\n      wordWrap: 'break-word',\r\n      marginTop: '10px',\r\n      backgroundColor: '#707BC4',\r\n      color: 'white',\r\n      width: '300px',\r\n      borderRadius: '10px'\r\n    },\r\n  \r\n    chatHeader: {\r\n      width: 'calc(100% - 301px)',\r\n      height: '50px',\r\n      backgroundColor: '#344195',\r\n      position: 'fixed',\r\n      marginLeft: '301px',\r\n      fontSize: '18px',\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      paddingTop: '10px',\r\n      boxSizing: 'border-box'\r\n    }\r\n  \r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport styles from './Style';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatView extends React.Component {\r\n    componentDidMount = () => {\r\n        const container = document.getElementById('chatview-container');\r\n        if(container)\r\n          container.scrollTo(0, container.scrollHeight);\r\n      }\r\n      componentDidUpdate = () => {\r\n        const container = document.getElementById('chatview-container');\r\n        if(container)\r\n          container.scrollTo(0, container.scrollHeight);\r\n      }\r\n    render(){\r\n\r\n        const { classes, chat } = this.props;\r\n\r\n        if(chat === undefined ){\r\n            return(<main className={classes.content}></main>);\r\n        } else {\r\n            return(\r\n                <div>\r\n                <div className={classes.chatHeader}>\r\n                  Твоя переписка з {this.props.chat.users.filter(_usr => _usr !== this.props.user)[0]}\r\n                </div>\r\n                <main id='chatview-container' className={classes.content}>\r\n                  {\r\n                    this.props.chat.messages.map((_msg, _index) => {\r\n                      return(\r\n                      <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\r\n                        {_msg.message}\r\n                      </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </main>\r\n              </div>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport default withStyles(styles)(ChatView);","const styles = theme => ({\r\n\r\n    sendBtn: {\r\n      color: 'blue',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        color: 'gray'\r\n      }\r\n    },\r\n  \r\n    chatTextBoxContainer: {\r\n      position: 'absolute',\r\n      bottom: '15px',\r\n      left: '315px',\r\n      boxSizing: 'border-box',\r\n      overflow: 'auto',\r\n      width: 'calc(100% - 300px - 50px)'\r\n    },\r\n  \r\n    chatTextBox: {\r\n      width: 'calc(100% - 25px)'\r\n    }\r\n  \r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Send from '@material-ui/icons/Send';\r\nimport styles from './Style';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatTextBox extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            chatText: ''\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n        <div className={classes.chatTextBoxContainer}>\r\n            <TextField \r\n            placeholder='Напиши своє повідомлення'\r\n            onKeyUp={(e) => this.userTyping(e)}\r\n            id='chattextbox'\r\n            className={classes.chatTextBox}\r\n            onFocus={this.userClickedInput}\r\n            >\r\n            </TextField>\r\n            <Send onClick={this.submitMessage}\r\n            className={classes.sendBtn}\r\n            >\r\n\r\n            </Send>\r\n        </div>\r\n        )\r\n    }\r\n    userTyping = (e) => e.keyCode ===13 ? this.submitMessage() : this.setState({chatText: e.target.value});\r\n    messageValid =(txt) => txt && txt.replace(/\\s/g, '').length;\r\n    submitMessage = () =>{\r\n        if(this.messageValid(this.state.chatText)){\r\n            this.props.submitMessageFN(this.state.chatText);\r\n            document.getElementById('chattextbox').value = ''\r\n        }\r\n\r\n    }\r\n    userClickedInput = () => this.props.messageChatFN();\r\n\r\n}\r\nexport default withStyles(styles)(ChatTextBox);","const styles = theme => ({\r\n    signOutBtn: {\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      left: '0px',\r\n      width: '300px',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#227092',\r\n      height: '35px',\r\n      boxShadow: '0px 0px 2px black',\r\n      color: 'white'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport ChatList from '../ChatList/ChatList';\r\nimport ChatView from '../ChatViev/Chatviev';\r\nimport ChatTextBox from '../ChatTextBox/ChatTextBox';\r\nimport styles from './Style';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Dashbord extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            selectedChat: null,\r\n            newChatFormVisible: false,\r\n            email: null,\r\n            chats: []\r\n        }\r\n    }\r\nrender(){\r\n    const { classes } = this.props;\r\nreturn(\r\n    <div>\r\n        <ChatList history={this.props.history}\r\n        newChatBtnFunction={this.newChatBtnClicked}\r\n        selectChatFunction={this.selectChat}\r\n        chats={this.state.chats}\r\n        userEmail = {this.state.email}\r\n        selectChatIndex={this.state.selectedChat} \r\n        ></ChatList>\r\n        {\r\n            this.state.newChatFormVisible ?\r\n            null :\r\n            <ChatView\r\n            user={this.state.email}\r\n            chat={this.state.chats[this.state.selectedChat]}\r\n            ></ChatView>\r\n        }\r\n        {\r\n            this.state.selectedChat !== null && ! this.state.newChatFormVisible ?\r\n            <ChatTextBox\r\n            submitMessageFN={this.submitMessage}\r\n            messageChatFN={this.messageRead}\r\n            ></ChatTextBox> : null\r\n        }\r\n        \r\n        <Button className={classes.signOutBtn} onClick={this.signOut}>Вийти</Button>\r\n    </div>\r\n)\r\n}\r\nsignOut = () => firebase.auth().signOut();\r\nselectChat = async (chatIndex) =>{\r\n   await this.setState({selectedChat: chatIndex});\r\n   this.messageRead();\r\n}\r\nsubmitMessage = (msg) =>{\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    firebase\r\n    .firestore()\r\n    .collection('chats')\r\n    .doc(docKey)\r\n    .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n           sender: this.state.email,\r\n           message:  msg,\r\n           timestap: Date.now()\r\n        }),\r\n        receiverHasRed: false\r\n    })\r\n}\r\n\r\nbuildDocKey = (friend) =>[this.state.email, friend].sort().join(':');\r\nnewChatBtnClicked = () => this.setState({newChatFormVisible: true, selectedChat: null});\r\nmessageRead = () =>{\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    if(this.clicKedChatWhereNotSen(this.state.selectedChat)){\r\n        firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({receiverHasRed: true})\r\n    } else {\r\n\r\n    }\r\n}\r\n\r\nclicKedChatWhereNotSen = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length -1].sender !== this.state.email;\r\n\r\ncomponentDidMount = () =>{\r\n    firebase.auth().onAuthStateChanged(async _usr =>{\r\n        if(!_usr)\r\n        this.props.history.push('/login');\r\n        else{\r\n            await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res =>{\r\n                const chats = res.docs.map(_doc => _doc.data());\r\n                await this.setState({\r\n                    email: _usr.email,\r\n                    chats: chats\r\n                });\r\n                console.log(this.state)\r\n            })\r\n        }\r\n    })\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Dashbord);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Route , BrowserRouter as Router} from 'react-router-dom';\nimport Login from './Login/Login';\nimport Singup from './Singup/Singup';\nimport Dashbord from './Dashbord/Dashbord';\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAgzoNF3pGGc_5QksGWMhxRIQuVoFD-VvI\",\n    authDomain: \"chat-21f4e.firebaseapp.com\",\n    databaseURL: \"https://chat-21f4e.firebaseio.com\",\n    projectId: \"chat-21f4e\",\n    storageBucket: \"chat-21f4e.appspot.com\",\n    messagingSenderId: \"553569046771\",\n    appId: \"1:553569046771:web:f0d7cef73b8c0861816786\"\n});\n\nconst routing = (\n    <Router>\n        <div id = 'routing-container'>\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/singup\" component={Singup}></Route>\n            <Route path=\"/dashbord\" component={Dashbord}></Route>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}